# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build-Test-Deploy Python application to Azure Web App Service

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Create and start virtual environment
      run: |
        python -m venv venv
        source venv/bin/activate

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pip install pytest pytest-cov
        pytest tests.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html

    - name: Zip artifact for deployment
      run: zip release.zip ./* -r

    - name: Upload artifact for deployment jobs
      uses: actions/upload-artifact@v3
      with:
        name: python-app
        path: |
          release.zip
          !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip


      # - name: Login to Azure
      #   uses: azure/login@v1
      #   with:
      #     client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_A7CBF068F3AB4AACBAE22877D49A91BB }}
      #     tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_46CDA6F218A545F9B3BDC78688E439DB }}
      #     subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_043DD70F613C4B16B1E212BD1C0109BD }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        # id: deploy-to-webapp
        with:
          app-name: 'test-webapp-wbx'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          slot-name: 'Production'
